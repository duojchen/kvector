import os
import pandas as pd
import pandas.util.testing as pdt
import pytest
import six


@pytest.fixture
def motifs(data_folder):
    return os.path.join(data_folder, 'example_rbps.motif')


def test_read_motifs(motifs):
    import kvector

    test = kvector.read_motifs(motifs)

    s = '''M001_0.6_A1CF_ENSG00000148584_Homo_sapiens	M001_0.6_A1CF_ENSG00000148584_Homo_sapiens	5.0,",A,C,G,T
0,0.39532879396435,0.10551388868612599,0.10551388868612599,0.39364342774540506
1,0.00770456803068082,0.00770456803068082,0.00770456803068082,0.976886297348457
2,0.976886297348457,0.00770456803068082,0.00770456803068082,0.00770456803068082
3,0.976886297348457,0.00770456803068082,0.00770456803068082,0.00770456803068082
4,0.00770456803068082,0.00770456803068082,0.00770456803068082,0.976886297348457
5,0.00770456803068082,0.00770456803068082,0.00770456803068082,0.976886297348457
6,0.321131137484576,0.14380369811499302,0.478370946765367,0.0566942181612342
"
M002_0.6_ANKRD17_ENSG00000132466_Homo_sapiens	M002_0.6_ANKRD17_ENSG00000132466_Homo_sapiens	5.0,",A,C,G,T
0,0.773202708628553,0.0755990967724702,0.0755990967724702,0.0755990967724702
1,0.00430461221593073,0.00430461221593073,0.9870861613459828,0.00430461221593073
2,0.9870861613459828,0.00430461221593073,0.00430461221593073,0.00430461221593073
3,0.00430461221593073,0.9870861613459828,0.00430461221593073,0.00430461221593073
4,0.00430461221593073,0.00430461221593073,0.9870861613459828,0.00430461221593073
5,0.22880975523660801,0.10208869663005,0.00430461221593073,0.664796933911185
6,0.427754153606094,0.0793093155884373,0.0997300686202917,0.393206460178951
"
M003_0.6_FBgn0262475_FBgn0262475_Drosophila_melanogaster	M003_0.6_FBgn0262475_FBgn0262475_Drosophila_melanogaster	5.0,",A,C,G,T
0,0.0983441407394978,0.0983441407394978,0.0983441407394978,0.704967578595223
1,0.00457897434436391,0.00457897434436391,0.7118873003534859,0.278954749988551
2,0.00457897434436391,0.00457897434436391,0.18604575865396106,0.8047962916880749
3,0.00457897434436391,0.00457897434436391,0.7346313744116741,0.256210675930362
4,0.00457897434436391,0.00457897434436391,0.00457897434436391,0.9862630759976719
5,0.00457897434436391,0.00457897434436391,0.822768953386897,0.16807309695514
6,0.0285430063447848,0.0285430063447848,0.11605126951013998,0.8268627169511971
"
M004_0.6_BRUNOL4_ENSG00000101489_Homo_sapiens	M004_0.6_BRUNOL4_ENSG00000101489_Homo_sapiens	5.0,",A,C,G,T
0,0.0850634504936057,0.0850634504936057,0.175951658141761,0.6539214362304301
1,0.0130464984118041,0.0130464984118041,0.776576805287808,0.197330201099004
2,0.0130464984118041,0.0130464984118041,0.0130464984118041,0.9608605079750091
3,0.0130464984118041,0.0130464984118041,0.764576198088384,0.20933080829842998
4,0.0130464984118041,0.0130464984118041,0.104633577159811,0.8692734292270029
5,0.0130464984118041,0.0130464984118041,0.6667990251158571,0.30710798127095695
6,0.0831008331277267,0.0831008331277267,0.26454785801693803,0.56925047512411
"'''
    true = pd.read_csv(six.StringIO(s), index_col=0, header=None,
                         squeeze=True)
    true = true.map(lambda x: pd.read_csv(six.StringIO(x), index_col=0))
    true.name = None
    true.index.name = None
    pdt.assert_index_equal(test.index, true.index)

    for (index1, df1), (index2, df2) in zip(test.items(), true.items()):
        assert index1 == index2
        pdt.assert_frame_equal(df1, df2)
